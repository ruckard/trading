// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© ruckard

//@version=5

// Current version: v20221105 ( A001 )
// Tradingview Public description - END

indicator(title='GapstrainRSI A001', shorttitle='A001GapstrainRSI', overlay=false)

// INPUTS - BEGIN

i_fvgFillType = input.string(title='Filled FVG Type', defval='H/L', options=['Close', 'H/L'], group='FairValueGap')
i_fvgMaxBarsback = input.int(100, 'Max bars back to find FVGs ?', minval=10, maxval=500, group='FairValueGap', tooltip='This will look for FVG\'s x bars back. The higher the number, the slower the script will run.')
i_showFvgTotals = input.bool(true, title='Show Fvg Totals {True}', group='FairValueGap')

i_gapstrainBullRsiLength = input.int(14, minval=1, title='RSI Length', group='Gapstrain RSI')
i_gapstrainBearRsiLength = input.int(14, minval=1, title='RSI Length', group='Gapstrain RSI')
i_showFvgRSIs = input.bool(true, title='Show Fvg RSIs {True}', group='Gapstrain RSI')

// INPUTS - END



// Strategy - INIT - BEGIN

// FairValueGap functions
fvgGetMtfData(res) =>
    request.security(
      syminfo.tickerid,
      res,
      [
      close[1] < low[2] and high[0] < low[2], // Bearish FVG
      close[1] > high[2] and low[0] > high[2], // Bullish FVG
      open[0],   high[0],   low[0],   close[0],   time[0], bar_index[0],
      open[1], high[1], low[1], close[1], time[1], bar_index[1],
      open[2], high[2], low[2], close[2], time[2], bar_index[2]
      ],
      gaps=barmerge.gaps_off,
      lookahead=barmerge.lookahead_off
      )

isFvgFilled(type, old_bi, old_h, old_l, bi, h, l, c) => // bull/bear, open, high, low, close, bar_index, fvg bar index
    isOld = bi - old_bi > i_fvgMaxBarsback

    type == 'bull' ?
      isOld or (i_fvgFillType == 'Close' ? c : l) <= old_h
      :
      isOld or (i_fvgFillType == 'Close' ? c : h) >= old_l

isPriceInsideFvg(type, old_h, old_l, h, l, c) =>
    type == 'bull' ?
      l < old_l and (i_fvgFillType == 'Close' ? c : l) > old_h
      :
      h > old_h and (i_fvgFillType == 'Close' ? c : h) < old_l

// FUNCTIONS - END


// Strategy Body - BEGIN

// FairValueGap substrategy

fairvaluegapTimeframe = timeframe.period

// FairValueGap - Get All OHLC Data
[bearishFvg, bullishFvg, fvgOpen, fvgHigh, fvgLow, fvgClose, fvgTime, fvgBarIndex, fvgOpen1, fvgHigh1, fvgLow1, fvgClose1, fvgTime1, fvgBarIndex1, fvgOpen2, fvgHigh2, fvgLow2, fvgClose2, fvgTime2, fvgBarIndex2] = fvgGetMtfData(fairvaluegapTimeframe)

// FairValueGap - Save data to arrays
var fvgBullIndexes = array.new_int(0)
var fvgBullHighs = array.new_float(0)
var fvgBullLows = array.new_float(0)
var fvgBearIndexes = array.new_int(0)
var fvgBearHighs = array.new_float(0)
var fvgBearLows = array.new_float(0)

if bullishFvg
    array.push(fvgBullIndexes, fvgBarIndex)
    array.push(fvgBullHighs, fvgHigh2)
    array.push(fvgBullLows, fvgLow)
else if bearishFvg
    array.push(fvgBearIndexes, fvgBarIndex)
    array.push(fvgBearHighs, fvgHigh)
    array.push(fvgBearLows, fvgLow2)

// FairValueGap - Delete filled fvgs
if array.size(fvgBullIndexes) > 0
    for i = array.size(fvgBullIndexes)-1 to 0
        if isFvgFilled('bull', array.get(fvgBullIndexes,i), array.get(fvgBullHighs,i), array.get(fvgBullLows,i), fvgBarIndex, fvgHigh, fvgLow, fvgClose)
            array.remove(fvgBullIndexes, i)
            array.remove(fvgBullHighs, i)
            array.remove(fvgBullLows, i)
if array.size(fvgBearIndexes) > 0
    for i = array.size(fvgBearIndexes)-1 to 0
        if isFvgFilled('bear', array.get(fvgBearIndexes,i), array.get(fvgBearHighs,i), array.get(fvgBearLows,i), fvgBarIndex, fvgHigh, fvgLow, fvgClose)
            array.remove(fvgBearIndexes, i)
            array.remove(fvgBearHighs, i)
            array.remove(fvgBearLows, i)

// FairValueGap - Check if inside fvg
fairValueGapInsideBull = false
fairValueGapInsideBear = false

if array.size(fvgBullIndexes) > 0
    for i = array.size(fvgBullIndexes)-1 to 0
        if isPriceInsideFvg('bull', array.get(fvgBullHighs,i), array.get(fvgBullLows,i), fvgHigh, fvgLow, fvgClose)
            fairValueGapInsideBull := true
if array.size(fvgBearIndexes) > 0
    for i = array.size(fvgBearIndexes)-1 to 0
        if isPriceInsideFvg('bear', array.get(fvgBearHighs,i), array.get(fvgBearLows,i), fvgHigh, fvgLow, fvgClose)
            fairValueGapInsideBear := true

// GapsTrainRSI - Total calculus
float fvgBullTotal = 0.0
if array.size(fvgBullIndexes) > 0
    for i = array.size(fvgBullIndexes)-1 to 0
        fvgBullTotal := fvgBullTotal + math.abs(array.get(fvgBullHighs,i) - array.get(fvgBullLows,i))

float fvgBearTotal = 0.0
if array.size(fvgBearIndexes) > 0
    for i = array.size(fvgBearIndexes)-1 to 0
        fvgBearTotal := fvgBearTotal + math.abs(array.get(fvgBearHighs,i) - array.get(fvgBearLows,i))

float currentTimeframeGapstrainBullRsi = ta.rsi(fvgBullTotal, i_gapstrainBullRsiLength)
float currentTimeframeGapstrainBearRsi = ta.rsi(fvgBearTotal, i_gapstrainBearRsiLength)

gapstrainBullRsi = currentTimeframeGapstrainBullRsi
gapstrainBearRsi = currentTimeframeGapstrainBearRsi

// FairValueGap Decision - Plot - BEGIN

fvgBullTotalColor = i_showFvgTotals ? color.new(color.green, transp=0) : na
fvgBearTotalColor = i_showFvgTotals ? color.new(#ff0062, transp=0) : na
fvgBullTotalPlot = plot(fvgBullTotal, color = fvgBullTotalColor, title = 'Bull Fvg Total')
fvgBearTotalPlot = plot(fvgBearTotal, color = fvgBearTotalColor, title = 'Bear Fvg Total')

gapstrainBullRsiColor = i_showFvgRSIs ? color.new(color.green, transp=0) : na
gapstrainBearRsiColor = i_showFvgRSIs ? color.new(#ff0062, transp=0) : na
gapstrainBullRsiPlot = plot(gapstrainBullRsi, color = gapstrainBullRsiColor, title = 'Bull Fvg Total')
gapstrainBearRsiPlot = plot(gapstrainBearRsi, color = gapstrainBearRsiColor, title = 'Bear Fvg Total')
